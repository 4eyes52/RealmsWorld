schema {
  query: Query
}

type Query {
  l2deposits(first: Int = 100, skip: Int = 0, orderBy: String = null, orderByDirection: String = "asc", where: WhereFilterForTransaction = null): [L2Deposit!]!
  deposit(hash: String!): L2Deposit
  l2withdrawals(first: Int = 100, skip: Int = 0, orderBy: String = null, orderByDirection: String = "asc", where: WhereFilterForWithdrawals = null): [L2Withdrawal!]!
}

type L2Deposit {
  id: String!
  l2Recipient: String!
  amount: Decimal!
  timestamp: DateTime!
  hash: String!
}

"""Decimal (fixed-point)"""
scalar Decimal

"""Date with time (isoformat)"""
scalar DateTime

input WhereFilterForTransaction {
  id: String = null
}

type L2Withdrawal {
  id: String!
  l1Recipient: String!
  l2Sender: String!
  amount: U256Value!
  timestamp: DateTime!
  hash: String!
}

scalar U256Value

input WhereFilterForWithdrawals {
  id: String = null
  l2Sender: String = null
}